Instructions

Put in your best efforts to complete one of these three challenge tiers:
Tier 1: Sequelized! (Basic to Moderate)

Remove all references to your vanilla MySQL queries and replace them with Sequelize queries.
That means:
Replacing your MySQL Burger model with a Sequelized equivalent.
Don't forget to edit the model and initial migration file to make the burger's devoured field carry a default value of false -- otherwise you might encounter bugs.
There's no option to include that default in the command line, so you'll need to open up Sublime to make this change.
Don't forget to sync the models!
Edit your new config.json file to include your database configurations. Place your JawsDB details in the production property of your json file; the details of your local database go in the developer property.
Remove your old ORM file, as well as any references to it in burgers_controller.js. Replace those references with Sequelize's ORM methods.
When you finish, your site should function just like your last one:

If you do go select this tier, you must edit the handlebars files and CSS stylesheets to implement some sort of additional feature to the site. We don't want you to just connect two models and submit your project. Make your site do something relevant to this association.
Bonus! (Challenge)

Add validations to your models where:
A burger's name cannot be null
A burger's devoured status is false by default
A Customer's name cannot be null
Order the Burgers you send back to the user in alphabetical order using the Sequelize "order" option.
One More Thing

If you have any questions about this project or the material we have covered, please post them in the community channels in slack so that your fellow developers can help you! If you're still having trouble, you can come to office hours for assistance from your instructor and TAs.
Good Luck!
Copyright

Coding Boot Camp (C) 2016. All Rights Reserved.
